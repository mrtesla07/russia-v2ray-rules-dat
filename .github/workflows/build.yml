name: build.yml
on:
  workflow_dispatch:
  schedule:
    - cron: "30 3,9,21 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        shell: bash

      - name: Checkout runetfreedom/geodat2srs
        uses: actions/checkout@v4
        with:
          repository: runetfreedom/geodat2srs
          path: geodat2srs

      - name: Checkout v2fly/domain-list-community
        uses: actions/checkout@v4
        with:
          repository: v2fly/domain-list-community
          path: domain-list-community

      - name: Checkout runetfreedom/domain-list-custom
        uses: actions/checkout@v4
        with:
          repository: runetfreedom/domain-list-custom
          path: domain-list-custom

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./geodat2srs/go.mod

      - name: Prepare custom geosite data
        run: |
          set -euo pipefail
          mkdir -p ./tmp/geosite-data
          while IFS= read -r list || [[ -n "$list" ]]; do
            [[ -z "$list" || "$list" =~ ^# ]] && continue
            cp "./domain-list-community/data/${list}" "./tmp/geosite-data/"
          done < ./scripts/geosite-dlc-lists.txt
          cp ./custom-lists/* ./tmp/geosite-data/
        shell: bash

      - name: Build custom geoip.dat
        run: |
          set -euo pipefail
          mkdir -p ./publish
          go run github.com/v2fly/geoip@latest -c ./geoip-config.json
          sha256sum ./publish/geoip.dat > ./publish/geoip.dat.sha256sum

      - name: Build custom geosite.dat
        working-directory: domain-list-custom
        run: |
          set -euo pipefail
          mkdir -p ../publish ../tmp/geosite-output
          go run ./ --datapath=../tmp/geosite-data --datname=geosite.dat --exportlists= --togfwlist= --outputpath=../tmp/geosite-output
          install -Dp ../tmp/geosite-output/geosite.dat ../publish/geosite.dat
          sha256sum ../publish/geosite.dat > ../publish/geosite.dat.sha256sum

      - name: Generate sing-box srs
        run: |
          go build -C geodat2srs ./
          ./geodat2srs/geodat2srs geoip -i ./publish/geoip.dat -o ./tmp/sing-box/rule-set-geoip/
          ./geodat2srs/geodat2srs geosite -i ./publish/geosite.dat -o ./tmp/sing-box/rule-set-geosite/
          cd ./tmp/sing-box || exit 1
          zip -r ../../publish/sing-box.zip *

      - name: Release and upload assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.TAG_NAME }}
          file_glob: true
          file: ./publish/*

      - name: Git push assets to "release" branch
        run: |
          rm -rf ./publish/sing-box.zip
          mv ./tmp/sing-box ./publish/sing-box
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release
